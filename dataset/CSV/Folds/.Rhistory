}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
print(paste0("Current working dir: ", x))
x <- as.character (x)
if(x == "TRUE") {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- as.character (x)
print(paste0("Current working dir: ", x))
if(x == "TRUE") {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- as.character (x)
if(x == "TRUE") {
print(paste0("Current working dir: ", x))
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
if(x == 'TRUE') {
print(paste0("Current working dir: ", x))
y <- 1
} else {
y <- 0
}
get <- function(x) {
x <- as.character (x)
if(x == 'TRUE') {
print(paste0("Current working dir: ", x))
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- as.character (x)
if(x == 'TRUE') {
print(paste0("Current working dir: ", x))
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData
get <- function(x) {
x <- as.character (x)
if(x == TRUE) {
print(paste0("Current working dir: ", x))
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- as.character (x)
if(isTRUE(x)) {
print(paste0("Current working dir: ", x))
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData
get <- function(x) {
x <- as.character (x)
print(paste0("Current working dir: ", x))
if(isTRUE(x)) {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
x <- x+ '.'
get <- function(x) {
x <- as.character (x)
x <- paste(x, '.')
print(paste0("Current working dir: ", x))
if(isTRUE(x)) {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- trim(x)
x <- paste(x, '.')
print(paste0("Current working dir: ", x))
if(isTRUE(x)) {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData
get <- function(x) {
x <- trim(x)
x <- paste(x, '.')
print(paste0("Current working dir: ", x))
if(isTRUE(x)) {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
get <- function(x) {
x <- trim(x)
x <- paste(x, '.')
print(paste0("Current working dir: ", x))
if(isTRUE(x)) {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- trim(x)
##  x <- paste(x, '.')
print(paste0("Current working dir: ", x))
if(x == "TRUE") {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- trim(x)
x <- paste(x, '.')
print(paste0("Current working dir: ", x))
if(x == "TRUE .") {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
get <- function(x) {
x <- trim(x)
// x <- paste(x, '.')
print(paste0("Current working dir: ", x))
case_when(
x == TRUE ~ y <- 1,
x == FALSE ~ y <- 0
)
y
}
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
case_when(
x == TRUE ~ y <- 1,
x == FALSE ~ y <- 0
)
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
case_when(
x == TRUE { y <- 1 },
x == FALSE { y <- 0 }
)
y
}
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
case_when(
x == TRUE ~ "1",
x == FALSE ~ "0"
)
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
case_when(
x == TRUE ~ "1",
x == FALSE ~ "0"
)
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
case_when(
x == TRUE ~ return "1",
x == FALSE ~ return "0"
)
}
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
if(x == 'RAVI') {
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
if(x > 0){
print("Non-negative number")
} else {
print("Negative number")
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
if('' > 0){
print("Non-negative number")
} else {
print("Negative number")
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
if('' > 0){
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
if(FALSE){
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData
get <- function(x) {
x <- trim(x)
print(paste0("Current working dir: ", x))
if(x){
y <- 1
} else {
y <- 0
}
y
}
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
MyData
MyData <-data.frame(loan.test.csv['customerid'], a, get(a))
a
a
x <- func2(a)
func2 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
vr[i] <- paste(vector[i], "-hi")
}
vr
}
x <- func2(a)
x
func2 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
vr[i] <- paste(vector[i], "-hi")
x <- trim(x)
print(paste0("Current working dir: ", x))
if(x == 'TRUE'){
vr[i] <- 1
} else {
vr[i] <- 0
}
}
vr
}
x <- func2(a)
func2 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
x <- trim(vector[i])
print(paste0("Current working dir: ", x))
if(x == 'TRUE'){
vr[i] <- 1
} else {
vr[i] <- 0
}
}
vr
}
a
x <- func2(a)
x
MyData <-data.frame(loan.test.csv['customerid'], get(a))
MyData <-data.frame(loan.test.csv['customerid'], x)
MyData
write.csv(MyData, file = "MyData.csv")
write.csv(MyData, file = "MyData.csv" ,row.names=FALSE)
write.csv(MyData, file = "MyData.csv" ,row.names=FALSE,col.names=FALSE)
write.csv(MyData, file = "MyData.csv" ,row.names=FALSE,col.names=FALSE)
func2 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
x <- trim(vector[i])
print(paste0("Current working dir: ", x))
if(x == 'TRUE'){
vr[i] <- 0
} else {
vr[i] <- 1
}
}
vr
}
a
x <- func2(a)
MyData <-data.frame(loan.test.csv['customerid'], x)
MyData
func2 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
x <- trim(vector[i])
print(paste0("Current working dir: ", x))
if(x == 'TRUE'){
vr[i] <- 1
} else {
vr[i] <- 0
}
}
vr
}
a
x <- func2(a)
MyData <-data.frame(loan.test.csv['customerid'], x)
MyData
write.csv(MyData, file = "MyData.csv" ,row.names=FALSE,col.names=FALSE)
func2 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
x <- trim(vector[i])
print(paste0("Current working dir: ", x))
if(x == 'TRUE'){
vr[i] <- 0
} else {
vr[i] <- 1
}
}
vr
}
a
x <- func2(a)
MyData <-data.frame(loan.test.csv['customerid'], x)
MyData
write.csv(MyData, file = "MyData.csv" ,row.names=FALSE,col.names=FALSE)
library(FFTrees)
library(tidyverse)
library(rhandsontable)
require(gridExtra)
setwd('/Users/ravirane/Desktop/GMU/CS584/project/creditRisk/dataset/CSV/Folds')
# Function to create Fast and Frugal Tree for given data and algo
fast.frugal.tree <- function(trainFile, testFile, algo, info) {
print(info)
loan.train <- read.csv(file=trainFile, header=TRUE, sep=",")
loan.test <- read.csv(file=testFile, header=TRUE, sep=",")
loan.fft <- FFTrees(formula = good_bad_flag ~ .,
data = loan.train,
data.test = loan.test,
algorithm = algo,
main = "Loan Data",
do.comp = FALSE,
decision.labels = c("Good", "Bad"))
print(loan.fft)
loan.fft
}
# Function to create Fast and Frugal Tree for given data and algo
fast.frugal.tree <- function(trainFile, testFile, algo, info) {
print(info)
loan.train <- read.csv(file=trainFile, header=TRUE, sep=",")
loan.test <- read.csv(file=testFile, header=TRUE, sep=",")
loan.fft <- FFTrees(formula = good_bad_flag ~ .,
data = loan.train,
data.test = loan.test,
algorithm = algo,
main = "Loan Data",
do.comp = FALSE,
decision.labels = c("Good", "Bad"))
print(loan.fft)
loan.fft
}
# Final model for train -
fold1.ifan.fft <- fast.frugal.tree("fold1_train.csv", "seq_test.csv", "ifan", 'Train Model')
plot(fold1.ifan.fft, data = "test")
library(FFTrees)
library(tidyverse)
library(rhandsontable)
require(gridExtra)
setwd('/Users/ravirane/Desktop/GMU/CS584/project/creditRisk/dataset/CSV/Folds')
# Function to create Fast and Frugal Tree for given data and algo
fast.frugal.tree <- function(trainFile, testFile, algo, info) {
print(info)
loan.train <- read.csv(file=trainFile, header=TRUE, sep=",")
loan.test <- read.csv(file=testFile, header=TRUE, sep=",")
loan.fft <- FFTrees(formula = good_bad_flag ~ .,
data = loan.train,
data.test = loan.test,
algorithm = algo,
main = "Loan Data",
do.comp = FALSE,
decision.labels = c("Good", "Bad"))
print(loan.fft)
loan.fft
}
# Final model for train -
fold1.ifan.fft <- fast.frugal.tree("fold1_train.csv", "seq_test.csv", "ifan", 'Train Model')
plot(fold1.ifan.fft, data = "test")
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
## True - 0 false - 1
func2 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
x <- trim(vector[i])
print(paste0("Current working dir: ", x))
if(x == 'TRUE'){
vr[i] <- 0
} else {
vr[i] <- 1
}
}
vr
}
x <- func2(a)
## True - 0 false - 1
func2 <- function(vector) {
vr <- c() ### an empty vector
for (i in 1:length(vector)) {
x <- trim(vector[i])
if(x == 'TRUE'){
vr[i] <- 0
} else {
vr[i] <- 1
}
}
vr
}
x <- func2(a)
## Creating submission file
MyData <-data.frame(loan.test.csv['customerid'], x)
write.csv(MyData, file = "MyData.csv" ,row.names=FALSE,col.names=FALSE)
## Creating submission file
MyData <-data.frame(customerid=loan.test.csv['customerid'], Good_Bad_flag=x)
MyData
write.csv(MyData, file = "MyData.csv" ,row.names=FALSE)
write.csv(MyData, file = "kaggle-test.csv" ,row.names=FALSE)
